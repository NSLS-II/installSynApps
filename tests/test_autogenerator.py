"""Unit test file for script + readme autogenerator
"""

__author__      = "Jakub Wlodek"
__copyright__   = "Copyright June 2019, Brookhaven Science Associates"

import os
import shutil
import pytest

import tests.helper_test_funcs as Helper
import installSynApps.data_model.install_config as IC
import installSynApps.data_model.install_module as IM
import installSynApps.io.config_parser as Parser
import installSynApps.io.file_generator as AutoGenerator

parser = Parser.ConfigParser('tests/TestConfigs/basic')
install_config, message = parser.parse_install_config(force_location='tests/TestFiles/inputs')
generator = AutoGenerator.FileGenerator(install_config)



def test_dir_create():
    generator.initialize_dir()
    assert os.path.exists(install_config.install_location + '/autogenerated')
    os.rmdir(install_config.install_location + '/autogenerated')


def test_install_script():
    generator.initialize_dir()
    generator.generate_install()
    test = open(install_config.install_location + '/autogenerated/install.sh', 'r')
    test.readline()
    test.readline()
    check = open('tests/TestFiles/outputs/ExpectedInstallScript', 'r')
    check.readline()
    check.readline()
    val = Helper.compare_files(test, check)
    test.close()
    check.close()
    assert val
    shutil.rmtree(install_config.install_location + '/autogenerated')


def test_uninstall_script():
    generator.initialize_dir()
    generator.generate_uninstall()
    test = open(install_config.install_location + '/autogenerated/uninstall.sh', 'r')
    test.readline()
    test.readline()
    check = open('tests/TestFiles/outputs/ExpectedUninstallScript', 'r')
    check.readline()
    check.readline()
    val = Helper.compare_files(test, check)
    test.close()
    check.close()
    assert val
    shutil.rmtree(install_config.install_location + '/autogenerated')


def test_README():
    generator.initialize_dir()
    generator.generate_readme_simple()
    test = open(install_config.install_location + '/INSTALL_README.txt', 'r')
    test.readline()
    check = open('tests/TestFiles/outputs/ExpectedREADME', 'r')
    check.readline()
    val = Helper.compare_files(test, check)
    test.close()
    check.close()
    assert val
    os.remove(install_config.install_location + '/INSTALL_README.txt')